image: Visual Studio 2019
configuration:
  - Release
  - Debug

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  MSYSTEM: MINGW64
  MSYS2_PATH_TYPE: inherit
  PKG_CONFIG_PATH: C:/msys64/mingw64/lib/pkgconfig
  BASE_CMAKE_ARGS: -DCMAKE_INSTALL_PREFIX=C:/msys64/mingw64 -DBUILD_SHARED_LIBS=off
  matrix:
    - generator: Visual Studio 2019
    - generator: Unix Makefiles

matrix:
  exclude:
    - configuration: Debug
      generator: Unix Makefiles

install:
  - '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64'
  - set "PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%"
  - ps: (New-Object System.Net.WebClient).DownloadFile('https://raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master/video.tar.gz', "$PWD\video.tar.gz")
  - tar xf video.tar.gz
  - pacman -Syyuu --ask=20 --noconfirm --noprogressbar --needed
  - ps: if ("$env:generator" -match "Unix") { $env:packages = "mingw-w64-x86_64-ccache mingw-w64-x86_64-gcc pkg-config make" }
  - pacman -Suu --ask=20 --noconfirm --noprogressbar --needed mingw-w64-x86_64-yasm %packages%
  - ps: |
      if ("$env:generator" -match "Visual*") {
        cmake -S . -B Build -G "Visual Studio 16 2019" -A x64 $env:BASE_CMAKE_ARGS.Split(' ')
      } elseif ($null -ne $env:generator){
        cmake -S . -B Build -G "$env:generator" -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE="$env:CONFIGURATION" $env:BASE_CMAKE_ARGS.Split(' ')
      } else {
        cmake -S . -B Build -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE="$env:CONFIGURATION" $env:BASE_CMAKE_ARGS.Split(' ')
      }
  - pacman -Sc --noconfirm

for:
  - matrix:
      only:
        - configuration: Release
          generator: Unix Makefiles
    build_script:
      - make -C Build -j install
      - pkg-config --debug --exists --print-errors SvtHevcEnc
      - git clone https://github.com/FFmpeg/FFmpeg.git --depth=1 --branch=master ffmpeg
      - cd ffmpeg
      - git apply --ignore-space-change --ignore-whitespace %APPVEYOR_BUILD_FOLDER%/ffmpeg_plugin/0001-lavc-svt_hevc-add-libsvt-hevc-encoder-wrapper.patch
      - ps: |
          $path = ([System.Environment]::GetEnvironmentVariable('PATH', 'Machine').Split(';') | Where-Object { $_ -notmatch 'Git' }) -join ';'
          [System.Environment]::SetEnvironmentVariable('PATH', $path, 'Machine')
      - bash -c './configure --arch=x86_64 --cc="ccache gcc" --cxx="ccache g++" --enable-libsvthevc --enable-encoder=libsvt_hevc || cat ffbuild/config.log'
      - make -j 10
      - ffmpeg -i ../akiyo_cif.y4m -c:v libsvt_hevc akiyo.h265
      - cd ..
    #artifacts:
    #  - path: bin\Release\SvtHevcEncApp.exe
    #    name: $(APPVEYOR_PROJECT_NAME)
    #  - path: bin\Release\libSvtHevcEnc.a
    #    name: $(APPVEYOR_PROJECT_NAME)
    #  - path: ffmpeg\ffmpeg.exe
    #    name: $(APPVEYOR_PROJECT_NAME)_FFMPEG

  #- matrix:
  #    only:
  #      - generator: Visual Studio 2019
  #        configuration: Release
  #  build:
  #    project: Build\svt-hevc.sln
  #  artifacts:
  #    - path: bin\Release\SvtHevcEncApp.exe
  #      name: $(APPVEYOR_PROJECT_NAME)
  #    - path: bin\Release\SvtHevcEnc.lib
  #      name: $(APPVEYOR_PROJECT_NAME)

build:
  project: Build\svt-hevc.sln

test_script:
  - ps: "& ./Bin/$env:CONFIGURATION/SvtHevcEncApp -n 50 -encMode 9 -i akiyo_cif.y4m -b test1.h265"

cache:
  - 'C:\msys64\home\appveyor\.ccache'
  - 'C:\msys64\var\cache\pacman\pkg'

deploy:
  - provider: GitHub
    artifact: $(APPVEYOR_PROJECT_NAME)
    auth_token:
      secure: "sf0pQXlPI+X6LoAR8QUJB74jjzNxcLGOXI3H0nbxJq8llvGPG/TAUd87hq5iHZXo"
    prerelease: true
    on:
      appveyor_repo_tag: true
      generator: Visual Studio 2019
      configuration: Release
